unit frm_CadRiscoVisualizacao;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, frxClass, frxDBSet, DB, DBClient, Provider, ZAbstractRODataset,
  ZAbstractDataset, ZDataset, Grids, DBGrids, StdCtrls, ComCtrls, JvgPage,
  Buttons, ExtCtrls, DBCtrls;

type
  TFormCadRiscoVisualizacao = class(TForm)
    frxDBDSMacro: TfrxDBDataset;
    zqryImprimir: TZQuery;
    dspImprimir: TDataSetProvider;
    cdsImprimir: TClientDataSet;
    pnl1: TPanel;
    btnImprimir: TBitBtn;
    btnSair: TBitBtn;
    frxReport1: TfrxReport;
    cdsImprimirmac_codigo: TIntegerField;
    cdsImprimirmac_codfator: TIntegerField;
    cdsImprimirmac_codvariavel: TIntegerField;
    cdsImprimirmac_tipo: TIntegerField;
    cdsImprimirmac_texto: TWideStringField;
    cdsImprimirfator: TWideStringField;
    cdsImprimirvar_descricao: TWideStringField;
    btnPMC: TBitBtn;
    btnDesvincular: TBitBtn;
    btnVincular: TBitBtn;
    zqryPMC: TZQuery;
    dspPMC: TDataSetProvider;
    cdsPMC: TClientDataSet;
    dsPMC: TDataSource;
    cdsPMCcodi_pmc: TLargeintField;
    cdsPMCdata_pmc: TDateTimeField;
    cdsPMCnume_pmc: TWideStringField;
    cdsPMCdesctipo: TWideStringField;
    pnlPMCLista: TPanel;
    pnl2: TPanel;
    btnSairPMC: TBitBtn;
    btnSelecionar: TBitBtn;
    dbgListaMestra: TDBGrid;
    btnVisualizar: TBitBtn;
    dbg1: TDBGrid;
    pnlFiltro: TPanel;
    rgFiltro: TRadioGroup;
    procedure btnSairClick(Sender: TObject);
    procedure btnVideoClick(Sender: TObject);
    procedure btnImpressoraClick(Sender: TObject);
    procedure Impressao(tipoImp: string);
    procedure btnPMCClick(Sender: TObject);
    procedure btnDesvincularClick(Sender: TObject);
    procedure btnVincularClick(Sender: TObject);
    procedure btnSairPMCClick(Sender: TObject);
    procedure btnVisualizarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    iCodProcesso: Integer;
    iCodigo: Integer;
    sTipoIntExt: string;
    sTipoRisco: string;
  end;

var
  FormCadRiscoVisualizacao: TFormCadRiscoVisualizacao;

implementation

uses Funcoes, frm_Inicial, frm_dm, frm_CadPMCAbre, frm_CadPMCFecha,
  frm_CadRiscoAnaliseRisco;

{$R *.dfm}

procedure TFormCadRiscoVisualizacao.btnDesvincularClick(Sender: TObject);
begin
   try
      with dm.cdsAuxiliar do begin
         Active:= False;
         if sTipoIntExt = 'INTERNA' then begin
            CommandText:= ' UPDATE risco_analiseint SET' +
                          ' int_pmc = ' + QuotedStr('') +
                          ' WHERE int_codigo = ' + IntToStr(iCodigo);
         end
         else begin
            CommandText:= ' UPDATE risco_macro SET' +
                          ' mac_pmc = ' + QuotedStr('') +
                          ' WHERE mac_codigo = ' + IntToStr(iCodigo);
         end;
         Execute;
      end;

      btnDesvincular.Enabled:= False;
      btnVincular.Enabled   := True;
      FormAnaliseRisco.AtualizarDados();
   except
      on E:Exception do begin
         MostrarErro('Erro ao desvincular PMC', E.Message, Self.Name);
      end;
   end;
end;

procedure TFormCadRiscoVisualizacao.btnImpressoraClick(Sender: TObject);
begin
   Impressao('I');
end;

procedure TFormCadRiscoVisualizacao.btnPMCClick(Sender: TObject);
begin
   // Se for novo PMC abre a tela de cadastro
   // senão abre a tela de finalização de PMC
//   if edtPMC.Text = '' then begin
//      if Acesso(cUsuario, 10, 'acesso') = 1 then begin
//         FormCadPMCAbre:= TFormCadPMCAbre.Create(nil);
//         FormCadPMCAbre.iTela:= 2; // Gestão de Riscos
//         FormCadPMCAbre.ShowModal;
//         FormCadPMCAbre.Release;
//      end;
//   end
//   else begin
//      FormCadPMCFecha:= TFormCadPMCFecha.Create(nil);
//      FormCadPMCFecha.sCodigoPMC:= QuotedStr(edtPMC.Text);
//      FormCadPMCFecha.iTela:= 3; // Gestão de Riscos
//      FormCadPMCFecha.ShowModal;
//      FormCadPMCFecha.Release;
//      FormCadPMCFecha.Free;
//      FormCadPMCFecha:= nil;
//   end;
end;

procedure TFormCadRiscoVisualizacao.btnSairClick(Sender: TObject);
begin
   Self.Close;
end;

procedure TFormCadRiscoVisualizacao.btnSairPMCClick(Sender: TObject);
begin
   pnlPMCLista.Visible:= False;
end;

procedure TFormCadRiscoVisualizacao.btnVideoClick(Sender: TObject);
begin
   Impressao('V');
end;

procedure TFormCadRiscoVisualizacao.btnVincularClick(Sender: TObject);
begin
   cdsPMC.Active:= False;
   cdsPMC.Active:= True;

   pnlPMCLista.Top     := Self.Height div 2 - pnlPMCLista.Height div 2 - 20;
   pnlPMCLista.Left    := Self.Width div 2 - pnlPMCLista.Width div 2;
   pnlPMCLista.Visible:= True;
end;

procedure TFormCadRiscoVisualizacao.btnVisualizarClick(Sender: TObject);
begin
   FormCadPMCFecha:= TFormCadPMCFecha.Create(nil);
   FormCadPMCFecha.sCodigoPMC:= cdsPMC.FieldByName('codi_pmc').AsString;
   FormCadPMCFecha.iTela:= 4;
   FormCadPMCFecha.ShowModal;
   FormCadPMCFecha.Release;
end;

procedure TFormCadRiscoVisualizacao.Impressao(tipoImp: string);
var
   sCampoOrdem: string;
   sTipo: string;
begin
   with cdsImprimir do begin
      Active:= False;
      CommandText:= ' SELECT mac_codigo, mac_codfator, mac_codvariavel, mac_tipo, mac_texto, ' +
                    ' TC.valo_com as Fator, R.var_descricao' +
                    ' FROM risco_macro' +
                    ' INNER JOIN tabela_combos TC ON TC.codi_com = mac_codfator and TC.tipo_com = 22' +
                    ' INNER JOIN risco_variaveis_ext R ON R.var_codigo = mac_codvariavel' +
                    ' WHERE 1 = 1';
      Active:= True;
   end;

   if cdsImprimir.RecordCount = 0 then begin
      Application.MessageBox('Não há registros para imprimir','Aviso', MB_OK + MB_ICONWARNING);
      Exit;
   end;

   with frxReport1 do begin
      LoadFromFile(ExtractFilePath(Application.ExeName) + '\Relatórios\rel_risco_macroambiente.fr3');
      if tipoImp = 'I' then begin
      // Imprimir direto
         PrepareReport;
         PrintOptions.ShowDialog:= False;
         Print;
      end
      else begin
         ShowReport;
      end;
   end;
end;

end.
